{
  "service": {
    "service": "my-appsync-app",
    "serviceObject": {
      "name": "my-appsync-app"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "region": "ap-northeast-1",
      "environment": {
        "PUBLIC_KEY_BASE64": "LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0NCk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdytWL05uUElzQVlZRGk5cVRoTHcNCjA4ellxWjVRc1cyWmcxZ3hGMlR0Y291b0s1dVdsc2F1alB0VG0xNXhvOVd0b0pCTDZ0WTNrQ0FZbUc2UFpEQmUNCmZBbDhWTVdweDBKK3VQSlkyK2pBa0x6TTEzaXJYTU8xVUxZemhjNmUwYllwdG1mM0ZiU3FqL1dEVUtWQmQzV0QNCkQ3aEZMZEh0SXRBbGliTEdNMnFGQmI5SGFjL2JwTU1wQlpCWFFCdkZLNHVCTER2RlBoOFFwVmZ6Zjg1M2QwNWwNCm5BbzYyR3hOdUtDYlBJL2pDV0FSdmREemxwRlg1TG4xT0tVcExvOGJ2SWt6UXZDZlVDRk9HUHp1SGloSUl4YzENCnZ2dTdtMFE0L1Y2ZG14eFByZTRtMVkvaWhVN2xoK0tmbUViM2l6Skx5SGlUcGVHYWJLOTdGQ09TWlM2T0tkOGkNClpRSURBUUFCDQotLS0tLUVORCBQVUJMSUMgS0VZLS0tLS0NCg==\r\n"
      },
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "AuthLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/my-appsync-app-dev-auth"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "my-appsync-app",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/my-appsync-app-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/my-appsync-app-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "my-appsync-app",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "AuthLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/my-appsync-app/dev/1754235970887-2025-08-03T15:46:10.887Z/auth.zip"
              },
              "Handler": "authorizer/handler.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "my-appsync-app-dev-auth",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PUBLIC_KEY_BASE64": "LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0NCk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdytWL05uUElzQVlZRGk5cVRoTHcNCjA4ellxWjVRc1cyWmcxZ3hGMlR0Y291b0s1dVdsc2F1alB0VG0xNXhvOVd0b0pCTDZ0WTNrQ0FZbUc2UFpEQmUNCmZBbDhWTVdweDBKK3VQSlkyK2pBa0x6TTEzaXJYTU8xVUxZemhjNmUwYllwdG1mM0ZiU3FqL1dEVUtWQmQzV0QNCkQ3aEZMZEh0SXRBbGliTEdNMnFGQmI5SGFjL2JwTU1wQlpCWFFCdkZLNHVCTER2RlBoOFFwVmZ6Zjg1M2QwNWwNCm5BbzYyR3hOdUtDYlBJL2pDV0FSdmREemxwRlg1TG4xT0tVcExvOGJ2SWt6UXZDZlVDRk9HUHp1SGloSUl4YzENCnZ2dTdtMFE0L1Y2ZG14eFByZTRtMVkvaWhVN2xoK0tmbUViM2l6Skx5SGlUcGVHYWJLOTdGQ09TWlM2T0tkOGkNClpRSURBUUFCDQotLS0tLUVORCBQVUJMSUMgS0VZLS0tLS0NCg==\r\n"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "AuthLogGroup"
            ]
          },
          "AuthLambdaVersion7KsEpzrHca7HX1oOMtllaTW9XyzO7vHDFEqoRhBv1U": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AuthLambdaFunction"
              },
              "CodeSha256": "D6LRfuyMqKayUqzROACYGwjJoghCNGLIG/UplMkNi8Q="
            }
          },
          "PaymentStatusTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "PaymentStatusTable",
              "AttributeDefinitions": [
                {
                  "AttributeName": "reservation_id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "reservation_id",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "GraphQlApi": {
            "Type": "AWS::AppSync::GraphQLApi",
            "Properties": {
              "Name": "confirm-payment-status-api",
              "AuthenticationType": "AWS_LAMBDA",
              "AdditionalAuthenticationProviders": [],
              "LambdaAuthorizerConfig": {
                "AuthorizerUri": {
                  "Fn::GetAtt": [
                    "AuthLambdaFunction",
                    "Arn"
                  ]
                },
                "IdentityValidationExpression": ".*",
                "AuthorizerResultTtlInSeconds": 300
              },
              "XrayEnabled": false
            }
          },
          "GraphQlApiLambdaAuthorizerPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "Action": "lambda:InvokeFunction",
              "FunctionName": {
                "Fn::GetAtt": [
                  "AuthLambdaFunction",
                  "Arn"
                ]
              },
              "Principal": "appsync.amazonaws.com",
              "SourceArn": {
                "Ref": "GraphQlApi"
              }
            }
          },
          "GraphQlSchema": {
            "Type": "AWS::AppSync::GraphQLSchema",
            "Properties": {
              "Definition": "type PaymentStatus {\n  reservation_id: ID!\n  status: String!\n}\n\ntype Mutation {\n  updatePaymentStatus(reservation_id: ID!, status: String!): PaymentStatus\n}\n\ntype Subscription {\n  onPaymentStatusChanged(reservation_id: ID!): PaymentStatus @aws_subscribe(mutations: [\"updatePaymentStatus\"])\n}\n\ntype Query {\n  getPaymentStatus(reservation_id: ID!): PaymentStatus\n}\n\nschema {\n  query: Query\n  mutation: Mutation\n  subscription: Subscription\n}",
              "ApiId": {
                "Fn::GetAtt": [
                  "GraphQlApi",
                  "ApiId"
                ]
              }
            }
          },
          "GraphQlDsPaymentStatusTableRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "appsync.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "GraphQlDsPaymentStatusTablePolicy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Action": [
                          "dynamodb:DeleteItem",
                          "dynamodb:GetItem",
                          "dynamodb:PutItem",
                          "dynamodb:Query",
                          "dynamodb:Scan",
                          "dynamodb:UpdateItem",
                          "dynamodb:BatchGetItem",
                          "dynamodb:BatchWriteItem",
                          "dynamodb:ConditionCheckItem"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                          {
                            "Fn::Join": [
                              ":",
                              [
                                "arn",
                                "aws",
                                "dynamodb",
                                "ap-northeast-1",
                                {
                                  "Ref": "AWS::AccountId"
                                },
                                {
                                  "Fn::Join": [
                                    "/",
                                    [
                                      "table",
                                      "PaymentStatusTable"
                                    ]
                                  ]
                                }
                              ]
                            ]
                          },
                          {
                            "Fn::Join": [
                              "/",
                              [
                                {
                                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GraphQlDsPaymentStatusTableRole\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][0][\"Resource\"][0]"
                                },
                                "*"
                              ]
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "GraphQlDsPaymentStatusTable": {
            "Type": "AWS::AppSync::DataSource",
            "Properties": {
              "ApiId": {
                "Fn::GetAtt": [
                  "GraphQlApi",
                  "ApiId"
                ]
              },
              "Name": "PaymentStatusTable",
              "Type": "AMAZON_DYNAMODB",
              "ServiceRoleArn": {
                "Fn::GetAtt": [
                  "GraphQlDsPaymentStatusTableRole",
                  "Arn"
                ]
              },
              "DynamoDBConfig": {
                "AwsRegion": "ap-northeast-1",
                "TableName": "PaymentStatusTable",
                "UseCallerCredentials": false,
                "Versioned": false
              }
            }
          },
          "GraphQlResolverMutationupdatePaymentStatus": {
            "Type": "AWS::AppSync::Resolver",
            "DependsOn": "GraphQlSchema",
            "Properties": {
              "ApiId": {
                "Fn::GetAtt": [
                  "GraphQlApi",
                  "ApiId"
                ]
              },
              "TypeName": "Mutation",
              "FieldName": "updatePaymentStatus",
              "RequestMappingTemplate": "{\r\n  \"version\": \"2018-05-29\",\r\n  \"operation\": \"PutItem\",\r\n  \"key\": {\r\n    \"reservation_id\": $util.dynamodb.toDynamoDBJson($ctx.args.reservation_id)\r\n  },\r\n  \"attributeValues\": {\r\n    \"status\": $util.dynamodb.toDynamoDBJson($ctx.args.status)\r\n  }\r\n}",
              "ResponseMappingTemplate": "$util.toJson($ctx.result)",
              "Kind": "UNIT",
              "DataSourceName": {
                "Fn::GetAtt": [
                  "GraphQlDsPaymentStatusTable",
                  "Name"
                ]
              }
            }
          },
          "GraphQlResolverSubscriptiononPaymentStatusChanged": {
            "Type": "AWS::AppSync::Resolver",
            "DependsOn": "GraphQlSchema",
            "Properties": {
              "ApiId": {
                "Fn::GetAtt": [
                  "GraphQlApi",
                  "ApiId"
                ]
              },
              "TypeName": "Subscription",
              "FieldName": "onPaymentStatusChanged",
              "RequestMappingTemplate": "{\r\n  \"version\": \"2018-05-29\",\r\n  \"operation\": \"GetItem\",\r\n  \"key\": {\r\n    \"reservation_id\": $util.dynamodb.toDynamoDBJson($ctx.args.reservation_id)\r\n  }\r\n}",
              "ResponseMappingTemplate": "#if($ctx.error)\r\n  $util.error($ctx.error.message, $ctx.error.type)\r\n#end\r\n\r\n#set($lambdaReservationId = $ctx.identity.resolverContext.reservation_id)  ## Lambda Authorizer からの reservation_id\r\n#set($requestReservationId = $ctx.args.reservation_id)  ## リクエストからの reservation_id\r\n\r\n## reservation_id が一致しない場合にエラーを返す\r\n#if($lambdaReservationId != $requestReservationId)\r\n  $util.error(\"Unauthorized: reservation_id does not match\", \"Unauthorized\")\r\n#end\r\n\r\n#if(!$util.isNull($ctx.result) && !$util.isNull($ctx.result.status))\r\n  $util.toJson($ctx.result)\r\n#else\r\n  #set($result = {})\r\n  #set($result.reservation_id = $ctx.args.reservation_id)\r\n  #set($result.status = \"UNKNOWN\") ## デフォルト値を設定\r\n  $util.toJson($result)\r\n#end",
              "Kind": "UNIT",
              "DataSourceName": {
                "Fn::GetAtt": [
                  "GraphQlDsPaymentStatusTable",
                  "Name"
                ]
              }
            }
          },
          "GraphQlResolverQuerygetPaymentStatus": {
            "Type": "AWS::AppSync::Resolver",
            "DependsOn": "GraphQlSchema",
            "Properties": {
              "ApiId": {
                "Fn::GetAtt": [
                  "GraphQlApi",
                  "ApiId"
                ]
              },
              "TypeName": "Query",
              "FieldName": "getPaymentStatus",
              "RequestMappingTemplate": "{\r\n  \"version\": \"2018-05-29\",\r\n  \"operation\": \"GetItem\",\r\n  \"key\": {\r\n    \"reservation_id\": $util.dynamodb.toDynamoDBJson($ctx.args.reservation_id)\r\n  }\r\n}",
              "ResponseMappingTemplate": "$util.toJson($ctx.result)",
              "Kind": "UNIT",
              "DataSourceName": {
                "Fn::GetAtt": [
                  "GraphQlDsPaymentStatusTable",
                  "Name"
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-my-appsync-app-dev-ServerlessDeploymentBucketName"
            }
          },
          "AuthLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AuthLambdaVersion7KsEpzrHca7HX1oOMtllaTW9XyzO7vHDFEqoRhBv1U"
            },
            "Export": {
              "Name": "sls-my-appsync-app-dev-AuthLambdaFunctionQualifiedArn"
            }
          },
          "GraphQlApiId": {
            "Value": {
              "Fn::GetAtt": [
                "GraphQlApi",
                "ApiId"
              ]
            },
            "Export": {
              "Name": {
                "Fn::Sub": "${AWS::StackName}-GraphQlApiId"
              }
            }
          },
          "GraphQlApiUrl": {
            "Value": {
              "Fn::GetAtt": [
                "GraphQlApi",
                "GraphQLUrl"
              ]
            },
            "Export": {
              "Name": {
                "Fn::Sub": "${AWS::StackName}-GraphQlApiUrl"
              }
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "appSync": {
        "schema": "graphql/schema.graphql",
        "name": "confirm-payment-status-api",
        "authenticationType": "AWS_LAMBDA",
        "lambdaAuthorizerConfig": {
          "authorizerResultTtlInSeconds": 300,
          "identityValidationExpression": ".*",
          "functionName": "auth"
        },
        "mappingTemplatesLocation": "resolvers",
        "mappingTemplates": [
          {
            "dataSource": "PaymentStatusTable",
            "type": "Mutation",
            "field": "updatePaymentStatus",
            "request": "updatePaymentStatus-request.vtl",
            "response": "updatePaymentStatus-response.vtl"
          },
          {
            "dataSource": "PaymentStatusTable",
            "type": "Subscription",
            "field": "onPaymentStatusChanged",
            "request": "onPaymentStatusChanged-request.vtl",
            "response": "onPaymentStatusChanged-response.vtl"
          },
          {
            "dataSource": "PaymentStatusTable",
            "type": "Query",
            "field": "getPaymentStatus",
            "request": "getPaymentStatus-request.vtl",
            "response": "getPaymentStatus-response.vtl"
          }
        ],
        "dataSources": [
          {
            "type": "AMAZON_DYNAMODB",
            "name": "PaymentStatusTable",
            "config": {
              "tableName": "PaymentStatusTable"
            }
          }
        ]
      }
    },
    "plugins": [
      "serverless-appsync-plugin"
    ],
    "pluginsData": {},
    "functions": {
      "auth": {
        "handler": "authorizer/handler.handler",
        "runtime": "nodejs18.x",
        "package": {
          "patterns": [
            "!**",
            "authorizer/**"
          ],
          "artifact": "C:\\Project\\push-notification\\serverless-infra\\.serverless\\auth.zip"
        },
        "events": [],
        "name": "my-appsync-app-dev-auth",
        "memory": 1024,
        "timeout": 6,
        "vpc": {},
        "versionLogicalId": "AuthLambdaVersion7KsEpzrHca7HX1oOMtllaTW9XyzO7vHDFEqoRhBv1U"
      }
    },
    "resources": {
      "Resources": {
        "PaymentStatusTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "PaymentStatusTable",
            "AttributeDefinitions": [
              {
                "AttributeName": "reservation_id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "reservation_id",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "my-appsync-app",
      "frameworkVersion": "3",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "package": {
        "individually": true,
        "artifactsS3KeyDirname": "serverless/my-appsync-app/dev/code-artifacts",
        "artifactDirectoryName": "serverless/my-appsync-app/dev/1754235970887-2025-08-03T15:46:10.887Z"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/my-appsync-app/dev/1754235970887-2025-08-03T15:46:10.887Z",
    "artifact": ""
  }
}